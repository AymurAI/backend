# codeblock generated by devtools
# source: /workspace/notebooks/dev/patterns/03-sections-spot/01-decision.ipynb


import re
from copy import deepcopy
from functools import reduce

from aymurai.utils.misc import get_element
from aymurai.meta.types import DataItem, DataBlock
from aymurai.meta.pipeline_interfaces import TrainModule


class DummyExtractorDecision(TrainModule):
    def save(self, path: str):
        return

    def load(self, path: str):
        return

    def fit(self, train: DataBlock, val: DataBlock):
        return

    def predict(self, data: DataBlock) -> DataBlock:
        data = [self.predict_single(item) for item in data]

        return data

    def predict_single(self, item: DataItem) -> DataItem:
        item = deepcopy(item)

        # format prediction
        if "predictions" not in item:
            item["predictions"] = {}
        if "records" not in item["predictions"]:
            item["predictions"]["records"] = {}
        if "entities" not in item["predictions"]:
            item["predictions"]["entities"] = []
        if "doc-cats" not in item["predictions"]:
            item["predictions"]["doc-cats"] = {}
        item["predictions"]["doc-cats"]["decision"] = "hace_lugar"
        item["predictions"]["records"]["decision"] = ["hace_lugar"]

        # skip if there are no section parser
        if not (sections := get_element(item, ["data", "spans", "section"], [])):
            return item

        sections = filter(
            lambda x: x["label"] in ["SECTION:DECISION", "KEYWORDS"],
            sections,
        )
        sections = sorted(sections, key=lambda e: e["start"])

        if not sections:
            return item
        offset = sections[0]["start"]

        text = reduce(lambda x, y: x + y, map(lambda z: z["text"], sections))

        patterns = [
            r"RECHAZAR",
            r"NO CONVALIDAR",
            r"(?i)no[\s_]+hace[\s_]+lugar",
        ]
        # entity_pattern =

        matches = re.findall("|".join(patterns), text)
        decision = "hace_lugar" if not matches else "no_hace_lugar"

        item["predictions"]["records"]["decision"].append(decision)
        item["predictions"]["doc-cats"]["decision"] = decision

        return item
