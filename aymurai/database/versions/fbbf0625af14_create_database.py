"""Create database

Revision ID: fbbf0625af14
Revises:
Create Date: 2024-11-27 18:51:21.220169

"""

from typing import Union, Sequence

import sqlmodel
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "fbbf0625af14"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "anonymization_document",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "anonymization_paragraph",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("text", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("prediction", sa.JSON(), nullable=True),
        sa.Column("validation", sa.JSON(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "datapublic",
        sa.Column("nro_registro", sa.Integer(), nullable=True),
        sa.Column("fecha_resolucion", sa.Date(), nullable=True),
        sa.Column("n_expte_eje", sa.Integer(), nullable=True),
        sa.Column("cuij", sa.Integer(), nullable=True),
        sa.Column("firma", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "materia",
            sa.Enum(
                "PENAL",
                "CONTRAVENCIONAL",
                "FALTAS",
                "AMPARO",
                "HABEAS_CORPUS",
                "EJECUCIONES_DE_MULTA",
                name="materia",
            ),
            nullable=True,
        ),
        sa.Column("art_infringido", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("codigo_o_ley", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("conducta", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "conducta_descripcion", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("violencia_de_genero", sa.Boolean(), nullable=True),
        sa.Column(
            "v_fisica",
            sa.Enum("SI", "NO", "SD", "NO_CORRESPONDE", name="violencia"),
            nullable=True,
        ),
        sa.Column(
            "v_psic",
            sa.Enum("SI", "NO", "SD", "NO_CORRESPONDE", name="violencia"),
            nullable=True,
        ),
        sa.Column(
            "v_econ",
            sa.Enum("SI", "NO", "SD", "NO_CORRESPONDE", name="violencia"),
            nullable=True,
        ),
        sa.Column(
            "v_sex",
            sa.Enum("SI", "NO", "SD", "NO_CORRESPONDE", name="violencia"),
            nullable=True,
        ),
        sa.Column(
            "v_soc",
            sa.Enum("SI", "NO", "SD", "NO_CORRESPONDE", name="violencia"),
            nullable=True,
        ),
        sa.Column(
            "v_amb",
            sa.Enum("SI", "NO", "SD", "NO_CORRESPONDE", name="violencia"),
            nullable=True,
        ),
        sa.Column(
            "v_simb",
            sa.Enum("SI", "NO", "SD", "NO_CORRESPONDE", name="violencia"),
            nullable=True,
        ),
        sa.Column(
            "v_polit",
            sa.Enum("SI", "NO", "SD", "NO_CORRESPONDE", name="violencia"),
            nullable=True,
        ),
        sa.Column(
            "modalidad_de_la_violencia",
            sa.Enum(
                "DOMESTICA",
                "INSTITUCIONAL",
                "MEDIATICA",
                "LABORAL",
                "CONTRA_LIBERTAD_REPRODUCTIVA",
                "OBSTETRICA",
                "ESPACIO_PUBLICO_PRIVADO",
                "POLITICA_PUBLICA",
                "DIGITAL",
                name="modalidadviolencia",
            ),
            nullable=True,
        ),
        sa.Column("frases_agresion", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "genero_acusado_a",
            sa.Enum(
                "VARON_CIS",
                "MUJER_CIS",
                "MUJER_TRANS",
                "TRAVESTI",
                "VARON_TRANS",
                "NO_BINARIA",
                "NO_CORRESPONDE",
                "NO_RESPONDE",
                name="genero",
            ),
            nullable=True,
        ),
        sa.Column("persona_acusada_no_determinada", sa.Boolean(), nullable=True),
        sa.Column(
            "nacionalidad_acusado_a", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("edad_acusado_a_al_momento_del_hecho", sa.Integer(), nullable=True),
        sa.Column(
            "nivel_de_instruccion_acusado_a",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=True,
        ),
        sa.Column(
            "genero_denunciante",
            sa.Enum(
                "VARON_CIS",
                "MUJER_CIS",
                "MUJER_TRANS",
                "TRAVESTI",
                "VARON_TRANS",
                "NO_BINARIA",
                "NO_CORRESPONDE",
                "NO_RESPONDE",
                name="genero",
            ),
            nullable=True,
        ),
        sa.Column(
            "nacionalidad_denunciante",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=True,
        ),
        sa.Column("edad_denunciante_al_momento_del_hecho", sa.Integer(), nullable=True),
        sa.Column(
            "nivel_de_instruccion_denunciante",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=True,
        ),
        sa.Column("trabajo_remunerado_denunciante", sa.Boolean(), nullable=True),
        sa.Column("nivel_de_ingresos_denunciante", sa.Float(), nullable=True),
        sa.Column(
            "domicilio_denunciante", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("asentamiento_o_villa", sa.Boolean(), nullable=True),
        sa.Column(
            "frecuencia_episodios",
            sa.Enum(
                "ESPORADICO",
                "DIARIO",
                "HABITUAL",
                "EVENTUAL",
                "PRIMERA_AGRESION",
                name="frecuenciaepisodios",
            ),
            nullable=True,
        ),
        sa.Column(
            "relacion_y_tipo_entre_acusado_a_y_denunciante",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=True,
        ),
        sa.Column("hijos_hijas_en_comun", sa.Boolean(), nullable=True),
        sa.Column(
            "medidas_de_proteccion_vigentes_al_momento_del_hecho",
            sa.Boolean(),
            nullable=True,
        ),
        sa.Column("zona_del_hecho", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("lugar_del_hecho", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("fecha_del_hecho", sa.Date(), nullable=True),
        sa.Column("fecha_de_inicio_del_hecho", sa.Date(), nullable=True),
        sa.Column("fecha_de_finalizacion_de_hecho", sa.Date(), nullable=True),
        sa.Column(
            "tipo_de_resolucion",
            sa.Enum("INTERLOCUTORIA", "DEFINITIVA", name="tiporesolucion"),
            nullable=True,
        ),
        sa.Column(
            "objeto_de_la_resolucion", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("detalle", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("decision", sa.Boolean(), nullable=True),
        sa.Column(
            "oral_escrita",
            sa.Enum("ORAL", "ESCRITA", name="oralescrita"),
            nullable=True,
        ),
        sa.Column("hora_de_inicio", sa.Time(), nullable=True),
        sa.Column("hora_de_cierre", sa.Time(), nullable=True),
        sa.Column("duracion", sa.Float(), nullable=True),
        sa.Column("link", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "anonymization_document_paragraph",
        sa.Column("document_id", sa.Uuid(), nullable=False),
        sa.Column("paragraph_id", sa.Uuid(), nullable=False),
        sa.Column("order", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["anonymization_document.id"],
        ),
        sa.ForeignKeyConstraint(
            ["paragraph_id"],
            ["anonymization_paragraph.id"],
        ),
        sa.PrimaryKeyConstraint("document_id", "paragraph_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("anonymization_document_paragraph")
    op.drop_table("datapublic")
    op.drop_table("anonymization_paragraph")
    op.drop_table("anonymization_document")
    # ### end Alembic commands ###
